<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <!-- 트랜잭션 Advice설정 -->		
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	   <tx:attributes>
	       <!-- 트랜잭션 적용: up으로 시작하는 메서드에 적용한다. 
	       name : 트랜잭션 적용 메서드 이름
	       read-only : 읽기 전용 여부
	       rollback-for : 트랜잭션을 롤백할 예외 
	       -->
	       <tx:method name="*Tx" read-only="false" rollback-for="Exception"/>
	           
	       <!-- 트랜잭션 제외 : up으로 시작하지 않는 모든 메서드-->
	       <tx:method name="*" read-only="true"/>  
	   </tx:attributes>
	</tx:advice>
	
	<!-- Tx -->
	<aop:config>
	   <aop:pointcut expression="execution( * com.pcwk.ehr..service.*Impl.*Tx(..))" id="txPointCut"/>
	   <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
	<!-- 'testUserService' is expected to be of type 'com.pcwk.ehr.user.service.
	TestUserService' but was actually of type 'com.sun.proxy.$Proxy37' -->
 	<tx:annotation-driven proxy-target-class="true"
	        transaction-manager="transactionManager" />
	
		
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass"
            value="oracle.jdbc.driver.OracleDriver" />
        <property name="url"
            value="jdbc:oracle:thin:@localhost:1521:xe" />
        <property name="username" value="pcwk" />
        <property name="password" value="GOOD" />
    </bean>
        
    <!-- 개발용 이메일 설정-->
    <bean id="dummyMailService" class="com.pcwk.ehr.user.service.DummyMailService"></bean>

	<!-- 온라인 이메일 -->
	<bean id="mailSenderImpl"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com"></property>
		<property name="port" value="465"></property>
		<property name="username" value="jamesol@naver.com"></property>
		<property name="password" value="비번"></property>
		<property name="defaultEncoding" value="utf-8"></property>

		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.host">smtp.naver.com</prop>
				<prop key="mail.smtp.port">465</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<prop key="mail.smtp.ssl.enable">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>




	<!-- UserServiceImpl -->
	<bean id="userService"
		class="com.pcwk.ehr.user.service.UserServiceImpl">
		<property name="mailSender" ref="dummyMailService"></property>
		<property name="userDao" ref="userDao"></property>
	</bean>

    <!-- TestUserService -->
    <bean id="testUserService" class="com.pcwk.ehr.user.service.TestUserService">
        <constructor-arg value="james04"></constructor-arg>
        <property name="mailSender" ref="dummyMailService"></property>
        <property name="userDao" ref="userDao"></property>        
    </bean>
    

	<bean id="userDao" class="com.pcwk.ehr.user.dao.UserDaoJdbc">
		<!-- setter 주입 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>

</beans>
